import{_ as e,c as r,o as a,a5 as l}from"./chunks/framework._9XAAHMS.js";const n="/docs/assets/threejs-structure.C39RWoDY.svg",d="/docs/assets/React-Angular-Vue.Ba5iFjTk.webp",p=JSON.parse('{"title":"CAD 前端介绍及 Canvas 框架对比","description":"","frontmatter":{"tags":["CAD","EDA","WiKi","技术"]},"headers":[],"relativePath":"wiki/CAD-front-end-and-Canvas-framework-comparison.md","filePath":"wiki/CAD-front-end-and-Canvas-framework-comparison.md","lastUpdated":1721023379000}'),i={name:"wiki/CAD-front-end-and-Canvas-framework-comparison.md"};function o(s,t,h,b,c,g){return a(),r("div",{"data-pagefind-body":!0},t[0]||(t[0]=[l('<h1 id="cad-前端介绍及-canvas-框架对比" tabindex="-1">CAD 前端介绍及 Canvas 框架对比 <a class="header-anchor" href="#cad-前端介绍及-canvas-框架对比" aria-label="Permalink to &quot;CAD 前端介绍及 Canvas 框架对比&quot;">​</a></h1><h2 id="cad-前后端" tabindex="-1">CAD 前后端 <a class="header-anchor" href="#cad-前后端" aria-label="Permalink to &quot;CAD 前后端&quot;">​</a></h2><p><a href="https://www.semiconductorreview.com/news/an-overview-of-electronic-design-automation-nwid-558.html" target="_blank" rel="noreferrer">EDA 是计算机辅助设计（CAD）的一个广义形式</a></p><blockquote><p>电子设计自动化（EDA）指的是一组计算机软件工具，帮助设计、生产、封装和测试大规模集成电路芯片。EDA 在 20 世纪 60 年代中期从计算机辅助设计（CAD）、计算机辅助制造（CAM）、计算机辅助测试（CAT）和计算机辅助工程（CAE）的理念中发展而来。<br> 工业软件可以根据应用领域分为三个主要方面：研发设计、生产调度和过程控制、以及业务管理。PLM(Product Lifecycle Management)、MES(Manufacturing Execution System) 和 ERP(Enterprise Resource Planning) 是这三个领域中工业软件系统的典型例子，而 EDA 和 PLM 则与研发和工业软件设计相关。EDA 技术集成了电子技术、计算机技术、信息处理技术和智能技术的最新发展，利用计算机作为自动化设计电子产品的平台。集成电路的设计、生产和制造是一个复杂的过程。</p></blockquote><p>在<a href="https://en.wikipedia.org/wiki/Software_engineering" target="_blank" rel="noreferrer">软件工程</a>中，<a href="https://en.wikipedia.org/wiki/Frontend_and_backend" target="_blank" rel="noreferrer">前端和后端</a>（有时写作 back end 或 back-end）指的是在软件的<a href="https://en.wikipedia.org/wiki/Presentation_layer" target="_blank" rel="noreferrer">表示层</a>（前端）和<a href="https://en.wikipedia.org/wiki/Data_access_layer" target="_blank" rel="noreferrer">数据访问层(DAL)</a>（后端）之间的<a href="https://en.wikipedia.org/wiki/Separation_of_concerns" target="_blank" rel="noreferrer">关注点分离(Separation of concerns)</a>，或指物理基础设施或<a href="https://en.wikipedia.org/wiki/Computer_hardware" target="_blank" rel="noreferrer">硬件</a>。在<a href="https://en.wikipedia.org/wiki/Client%E2%80%93server_model" target="_blank" rel="noreferrer">客户端-服务器模型</a>中，<a href="https://en.wikipedia.org/wiki/Client_(computing)" target="_blank" rel="noreferrer">客户端</a>通常被认为是前端，<a href="https://en.wikipedia.org/wiki/Server_(computing)" target="_blank" rel="noreferrer">服务器</a>通常被认为是后端，即使实际上在服务器上也进行了一些表示层的工作。 <br></p><h3 id="cad-前端功能点" tabindex="-1">CAD 前端功能点 <a class="header-anchor" href="#cad-前端功能点" aria-label="Permalink to &quot;CAD 前端功能点&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">功能点</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">绘图工具和功能</td><td style="text-align:left;">提供基本的绘图工具，如线条、矩形、圆形、多边形等 <br>高级功能，如放样、旋转、缩放、测量等</td></tr><tr><td style="text-align:left;">用户界面（UI）设计</td><td style="text-align:left;">友好的用户界面，允许用户轻松访问和使用各种工具和功能 <br>支持拖放操作、快捷键等，以提高效率</td></tr><tr><td style="text-align:left;">实时渲染和显示</td><td style="text-align:left;">3D 模型和图纸的实时渲染，使用户能够实时查看修改效果 <br> 支持不同视角和投影模式的切换</td></tr><tr><td style="text-align:left;">文件管理</td><td style="text-align:left;">支持常见 CAD 文件格式的导入和导出，如 DWG、DXF 等 <br> 提供文件的保存、打开和版本控制功能</td></tr><tr><td style="text-align:left;">交互和编辑</td><td style="text-align:left;">支持对象的选择、移动、缩放、旋转等基本操作 <br>高级编辑功能，如布尔操作、细分、平滑等</td></tr><tr><td style="text-align:left;">插件和扩展</td><td style="text-align:left;">允许用户安装和使用第三方插件以扩展功能 <br> 提供 API 以便开发者创建自定义功能</td></tr><tr><td style="text-align:left;">协作功能</td><td style="text-align:left;">实时协作功能，允许多用户同时编辑和查看同一文件 <br> 注释和标记工具，用于团队讨论和审阅</td></tr></tbody></table><h2 id="canvas-框架对比" tabindex="-1">Canvas 框架对比 <a class="header-anchor" href="#canvas-框架对比" aria-label="Permalink to &quot;Canvas 框架对比&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">备注</th><th>示例</th><th style="text-align:center;">硬件加速</th><th style="text-align:center;">Github 星数</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://github.com/pixijs/pixijs" target="_blank" rel="noreferrer">pixijs</a></td><td style="text-align:left;">2D WebGL 库</td><td><a href="https://pixijs.com/8.x/playground" target="_blank" rel="noreferrer">示例</a></td><td style="text-align:center;">WebGL,WebGPU</td><td style="text-align:center;">43.1k</td></tr><tr><td style="text-align:left;"><a href="https://github.com/tldraw/tldraw" target="_blank" rel="noreferrer">tldraw</a></td><td style="text-align:left;">适用于 React</td><td><a href="https://tldraw.dev/" target="_blank" rel="noreferrer">示例</a></td><td style="text-align:center;">-</td><td style="text-align:center;">34.4k</td></tr><tr><td style="text-align:left;"><a href="https://github.com/konvajs/konva" target="_blank" rel="noreferrer">Konva.js</a></td><td style="text-align:left;">适用于 React、Vue</td><td><a href="https://konvajs.org/docs/sandbox/Canvas_Editor.html" target="_blank" rel="noreferrer">示例</a></td><td style="text-align:center;">-</td><td style="text-align:center;">11.1k</td></tr><tr><td style="text-align:left;"><a href="https://github.com/mrdoob/three.js" target="_blank" rel="noreferrer">Three.js</a></td><td style="text-align:left;">JavaScript 3D 库</td><td><a href="https://threejs.org/examples" target="_blank" rel="noreferrer">示例</a></td><td style="text-align:center;">WebGL,WebGPU</td><td style="text-align:center;">101k</td></tr><tr><td style="text-align:left;"><a href="https://github.com/BabylonJS/Babylon.js" target="_blank" rel="noreferrer">Babylon.js</a></td><td style="text-align:left;">游戏和渲染引擎</td><td><a href="https://www.babylonjs.com/community/" target="_blank" rel="noreferrer">示例</a></td><td style="text-align:center;">WebGL,WebGPU</td><td style="text-align:center;">22.8k</td></tr><tr><td style="text-align:left;"><a href="https://github.com/excalidraw/excalidraw" target="_blank" rel="noreferrer">excalidraw</a></td><td style="text-align:left;">创建手绘风格的图表</td><td><a href="https://excalidraw.com/" target="_blank" rel="noreferrer">APP</a></td><td style="text-align:center;">-</td><td style="text-align:center;">77.3k</td></tr><tr><td style="text-align:left;"><a href="https://github.com/Automattic/node-canvas" target="_blank" rel="noreferrer">node-canvas</a></td><td style="text-align:left;">基于 Cairo</td><td><a href="https://codesandbox.io/examples/package/node-canvas" target="_blank" rel="noreferrer">示例</a></td><td style="text-align:center;">X Rendering Extension</td><td style="text-align:center;">10k</td></tr></tbody></table><p><a href="https://github.blog/2010-03-24-bye-bye-flash-network-graph-is-now-canvas/" target="_blank" rel="noreferrer">再见 Flash，前端现在使用 Canvas</a></p><blockquote><p><a href="https://en.wikipedia.org/wiki/Adobe_Flash" target="_blank" rel="noreferrer">Flash</a> 是由 Adobe（前身为 Macromedia）开发的多媒体平台，支持显示文本、矢量图形和光栅图形，可以创建动画、视频游戏和各种应用程序。F 由于安全问题和 Web 标准的进化，Flash 已经逐步被淘汰，现代技术如 HTML5、CSS 和 JavaScript 正在取代其位置。<br> <a href="https://en.wikipedia.org/wiki/Canvas_element" target="_blank" rel="noreferrer">Canvas</a> 元素是 HTML5 的一部分，允许动态、可编程地渲染 2D 形状和位图图像。它是一个低级的过程模型，用于更新位图。HTML5 Canvas 也有助于制作 2D 游戏。虽然 HTML5 canvas 提供了自己的 2D 绘图 API，但它也支持 WebGL API，以便使用 OpenGL ES 进行 3D 渲染。</p></blockquote><h3 id="konva-js" tabindex="-1">Konva.js <a class="header-anchor" href="#konva-js" aria-label="Permalink to &quot;Konva.js&quot;">​</a></h3><blockquote><p>Konva 是一个基于 HTML5 Canvas 的 JavaScript 框架，支持高性能的动画、过渡效果、节点嵌套、分层、滤镜、缓存、事件处理等功能，适用于桌面和移动应用程序等多种场景。 <br> 可以将数千个形态各异的图形绘制到场景中，并为它们添加事件监听器，对它们进行移动、缩放和旋转，而不影响其他形状，从而支持高性能的动画效果。</p></blockquote><p><strong>特色</strong></p><ul><li>节点嵌套、分组和事件冒泡</li><li>内置拖拽支持</li><li>面向对象风格的 API</li><li>同时支持桌面端和移动</li><li>高质量导出到数据 URL、图像数据或图像对象</li><li>开箱即用的过滤器</li><li>与 React、Vue 和 Svelte 等 Web 框架的原生集成</li></ul><p><strong>基于 Konva.js 开发的项目</strong></p><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">说明</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://windowcc.com/home" target="_blank" rel="noreferrer">画门窗</a></td><td style="text-align:left;">门窗设计、拆单算料、3D 模型效果</td><td style="text-align:center;"><a href="http://api.thinkerx.com:8060/web/#/116?page_id=3111" target="_blank" rel="noreferrer">使用教程</a> <br><a href="https://windowcc.com/market/index" target="_blank" rel="noreferrer">商城</a></td></tr><tr><td style="text-align:left;"><a href="https://boardos.online/" target="_blank" rel="noreferrer">BoardOS</a></td><td style="text-align:left;">在线多人实时白板协作系统</td><td style="text-align:center;"><a href="https://doc.boardos.online/help/" target="_blank" rel="noreferrer">帮助中心</a> <br><a href="https://boardos.online/community" target="_blank" rel="noreferrer">资源社区</a></td></tr><tr><td style="text-align:left;"><a href="https://shelly.dev/" target="_blank" rel="noreferrer">shelly</a></td><td style="text-align:left;">用于绘图的编程语言</td><td style="text-align:center;"><a href="https://shelly.dev/p" target="_blank" rel="noreferrer">示例</a></td></tr></tbody></table><h3 id="three-js" tabindex="-1">Three.js <a class="header-anchor" href="#three-js" aria-label="Permalink to &quot;Three.js&quot;">​</a></h3><p><img src="'+n+'" alt="Three.js结构"></p><blockquote><p>Three.js 经常与 WebGL 混淆，因为大多数情况下 three.js 使用 WebGL 进行 3D 绘制。WebGL 是一个非常低级的系统，只能绘制点、线和三角形；要在 WebGL 中实现任何有用的功能通常需要大量的代码，而 three.js 能替你处理场景、光照、阴影、材质、纹理、3D 数学等诸多方面，如果直接使用 WebGL 的话，这些都要你自己编写。<a href="https://threejs.org/manual/#en/fundamentals" target="_blank" rel="noreferrer">Three.js 基础</a></p></blockquote><p><strong>基于 Three.js 开发的项目</strong></p><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">说明</th><th style="text-align:center;">示例</th></tr></thead><tbody><tr><td style="text-align:left;"><a href="https://www.vjmap.com/" target="_blank" rel="noreferrer">JSCAD</a></td><td style="text-align:left;">使用 JavaScript 代码创建参数化的 2D 和 3D 设计，特别适用于 3D 打印应用。</td><td style="text-align:center;"><a href="https://openjscad.xyz/" target="_blank" rel="noreferrer">openjscad</a></td></tr><tr><td style="text-align:left;"><a href="https://www.vjmap.com/" target="_blank" rel="noreferrer">唯杰地图</a></td><td style="text-align:left;">CAD 图 WebGIS 可视化显示开发提供的一站式解决方案</td><td style="text-align:center;"><a href="https://vjmap.com/demo/#/gallery/map" target="_blank" rel="noreferrer">唯杰地图云端图纸管理平台</a></td></tr></tbody></table><h2 id="cpu-渲染和-gpu-渲染对比" tabindex="-1">CPU 渲染和 GPU 渲染对比 <a class="header-anchor" href="#cpu-渲染和-gpu-渲染对比" aria-label="Permalink to &quot;CPU 渲染和 GPU 渲染对比&quot;">​</a></h2><h3 id="cairo-cpu-渲染" tabindex="-1">Cairo (CPU 渲染) <a class="header-anchor" href="#cairo-cpu-渲染" aria-label="Permalink to &quot;Cairo (CPU 渲染)&quot;">​</a></h3><p><a href="https://cairographics.org/" target="_blank" rel="noreferrer">Cairo</a> 是一个开源图形库，为软件开发人员提供基于矢量图形、独立于设备的 API，它提供了跨多个不同后端的二维绘图的基元。</p><p><strong>将 Cairo 用于 2D 渲染的项目</strong></p><ul><li>GTK：前身为 GIMP ToolKit 和 GTK+，是一个自由软件的跨平台小部件工具包，用于创建图形用户界面（GUI）</li><li>Mono：由微软赞助，Mono 是作为 .NET Foundation 的一部分，基于 ECMA 对 C# 和公共语言运行时的标准，是微软 .NET Framework 的开源实现。</li><li>Firefox：由 Mozilla 基金会及其子公司开发的免费开源的网络浏览器。</li><li>WebKit：主要用于苹果 Safari 网页浏览器的浏览器引擎，同时也用于 iOS 和 iPadOS 上的所有网页浏览器</li><li>Poppler：用于渲染可移植文档格式（PDF）文档的免费开源软件库</li><li>KiCad： 开源的电子设计自动化（EDA）工具包，用于电子设计、电子测试和电子制造。</li><li>Inkscape：免费开源的矢量图形编辑器。</li><li>SolveSpace：免费开源的基于约束的参数化计算机辅助设计（CAD）软件</li></ul><h3 id="webgl-gpu-渲染" tabindex="-1">WebGL (GPU 渲染) <a class="header-anchor" href="#webgl-gpu-渲染" aria-label="Permalink to &quot;WebGL (GPU 渲染)&quot;">​</a></h3><blockquote><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API" target="_blank" rel="noreferrer">WebGL</a>（Web Graphics Library）是一种 JavaScript API，通过 HTML 的 canvas 元素用于在任何兼容的 Web 浏览器中渲染高性能的交互式 3D 和 2D 图形，而无需使用插件。WebGL 通过引入符合 OpenGL ES 2.0 的 API 以利用用户设备提供的硬件图形加速。<br> <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API" target="_blank" rel="noreferrer">WebGPU 是 WebGL 的继任者</a> ，提供了更好的现代 GPU 兼容性、支持通用目的 GPU 计算、更快的操作以及访问更高级的 GPU 功能。</p></blockquote><h3 id="二者优势和劣势" tabindex="-1">二者优势和劣势 <a class="header-anchor" href="#二者优势和劣势" aria-label="Permalink to &quot;二者优势和劣势&quot;">​</a></h3><table tabindex="0"><thead><tr><th>特性</th><th>CPU 渲染</th><th>GPU 渲染</th></tr></thead><tbody><tr><td>优势</td><td>- 简单易用<br>- 广泛支持<br>- 快速开发</td><td>- 高性能<br>- 3D 支持<br>- 可扩展性强</td></tr><tr><td>劣势</td><td>- 性能有限<br>- 缺乏 3D 支持<br>- 无法充分利用 GPU</td><td>- 复杂度高<br>- 兼容性问题<br>- 开发成本高</td></tr></tbody></table><h2 id="前端框架对比" tabindex="-1">前端框架对比 <a class="header-anchor" href="#前端框架对比" aria-label="Permalink to &quot;前端框架对比&quot;">​</a></h2><p><img src="'+d+'" alt="前端框架趋势"></p><table tabindex="0"><thead><tr><th>特性</th><th>React</th><th>Angular</th><th>Vue</th></tr></thead><tbody><tr><td><strong>开发者</strong></td><td>Facebook</td><td>Google</td><td>尤雨溪（Evan You）</td></tr><tr><td><strong>简介</strong></td><td>用于构建用户界面的 JavaScript 库，专注于视图层</td><td>完整的前端框架，提供一整套解决方案</td><td>渐进式 JavaScript 框架，适合构建用户界面</td></tr><tr><td><strong>优点</strong></td><td>- 组件化开发，代码复用性强<br>- 高效的虚拟 DOM，提升性能<br>- 强大的社区支持和生态系统<br>- 支持 React Native，用于开发移动端应用</td><td>- 完整的框架，提供了路由、表单处理、HTTP 客户端等功能<br>- 强类型支持（TypeScript），提高代码可维护性和可读性<br>- 依赖注入（Dependency Injection），提升代码的模块化和测试性<br>- 双向数据绑定，简化数据的同步</td><td>- 易于上手，文档详尽<br>- 轻量级，适合小型项目和单页应用<br>- 双向数据绑定和虚拟 DOM 提升开发体验和性能<br>- 渐进式框架，可以根据需求逐步引入更多功能</td></tr><tr><td><strong>缺点</strong></td><td>- 学习曲线较陡峭，需要学习 JSX 语法<br>- 只是一个视图层解决方案，需要搭配其他库进行状态管理和路由处理</td><td>- 学习曲线陡峭，概念和术语较多<br>- 框架较重，可能不适合小型项目</td><td>- 社区规模和生态系统相对较小<br>- 对于大型项目，可能需要更多的配置和管理工具</td></tr></tbody></table><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名称</th><th>开发效率</th><th>性能</th><th>流行程度</th><th style="text-align:center;">硬件加速支持</th><th style="text-align:center;">前端框架限制</th></tr></thead><tbody><tr><td>PixiJS</td><td>中</td><td>高</td><td>43.1k</td><td style="text-align:center;">WebGL, WebGPU</td><td style="text-align:center;">-</td></tr><tr><td>tldraw</td><td>高</td><td>中</td><td>34.4k</td><td style="text-align:center;">-</td><td style="text-align:center;">React 限定</td></tr><tr><td>Konva.js</td><td>高</td><td>中</td><td>11.1k</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td>Three.js</td><td>中</td><td>高</td><td>101k</td><td style="text-align:center;">WebGL, WebGPU</td><td style="text-align:center;">-</td></tr><tr><td>Babylon.js</td><td>中</td><td>高</td><td>22.8k</td><td style="text-align:center;">WebGL, WebGPU</td><td style="text-align:center;">-</td></tr><tr><td>Excalidraw</td><td>高</td><td>中</td><td>77.3k</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr><tr><td>Node-canvas</td><td>中</td><td>中</td><td>10k</td><td style="text-align:center;">X Rendering Extension</td><td style="text-align:center;">-</td></tr></tbody></table>',36)]))}const x=e(i,[["render",o]]);export{p as __pageData,x as default};
